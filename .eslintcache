[{"C:\\Front\\my-app\\src\\index.js":"1","C:\\Front\\my-app\\src\\reportWebVitals.js":"2","C:\\Front\\my-app\\src\\App.js":"3","C:\\Front\\my-app\\src\\SignUp.js":"4","C:\\Front\\my-app\\src\\Pages\\Login\\SignIn.jsx":"5","C:\\Front\\my-app\\src\\Pages\\Forget\\Forgot.jsx":"6","C:\\Front\\my-app\\src\\Pages\\Register\\Account.jsx":"7","C:\\Front\\my-app\\src\\Components\\DrawerFiles\\SimpleDrawer.jsx":"8","C:\\Front\\my-app\\src\\Components\\Home\\Dashboard.jsx":"9","C:\\Front\\my-app\\src\\Components\\NoteFiles\\Note.jsx":"10","C:\\Front\\my-app\\src\\Components\\NoteFiles\\CreateNote.jsx":"11","C:\\Front\\my-app\\src\\Pages\\Login\\Login.jsx":"12","C:\\Front\\my-app\\src\\Pages\\Register\\Reg.jsx":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"16","hashOfConfig":"15"},{"size":1294,"mtime":1612446484373,"results":"17","hashOfConfig":"15"},{"size":4193,"mtime":1611914521562,"results":"18","hashOfConfig":"15"},{"size":5064,"mtime":1612421311105,"results":"19","hashOfConfig":"15"},{"size":2304,"mtime":1612010543861,"results":"20","hashOfConfig":"15"},{"size":4142,"mtime":1612248834832,"results":"21","hashOfConfig":"15"},{"size":2458,"mtime":1612247630525,"results":"22","hashOfConfig":"15"},{"size":1218,"mtime":1612247161525,"results":"23","hashOfConfig":"15"},{"size":688,"mtime":1612328294306,"results":"24","hashOfConfig":"15"},{"size":2044,"mtime":1612247777521,"results":"25","hashOfConfig":"15"},{"size":5842,"mtime":1612422380121,"results":"26","hashOfConfig":"15"},{"size":6573,"mtime":1612432234125,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"zlsbo9",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"30"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"58","usedDeprecatedRules":"30"},"C:\\Front\\my-app\\src\\index.js",[],["59","60"],"C:\\Front\\my-app\\src\\reportWebVitals.js",[],"C:\\Front\\my-app\\src\\App.js",[],"C:\\Front\\my-app\\src\\SignUp.js",[],"C:\\Front\\my-app\\src\\Pages\\Login\\SignIn.jsx",["61","62","63","64","65","66"],"import React,{ useState , useEffect } from \"react\";\r\nimport { Typography, Link, Button } from \"@material-ui/core\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n//import { connect } from 'react-redux';\r\n//import { withStyles } from \"@material-ui/core/styles\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport './Login.css';\r\nimport { withRouter } from 'react-router-dom';\r\n//import axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n   // const styles = theme => ({  \r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    textField: {\r\n      marginLeft: theme.spacing(2),\r\n      marginRight: theme.spacing(1),\r\n      width: '50ch',\r\n      marginTop: theme.spacing(2),\r\n      height:'10ch',\r\n    },\r\n    textFieldsec: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(1),\r\n        width: '50ch',\r\n        height:'10ch',\r\n      },\r\n      linkPass: {\r\n          textAlign: \"left\",\r\n          marginLeft: theme.spacing(2),\r\n          fontWeight: \"bold\",\r\n      },\r\n      linkButton: {\r\n        textAlign: \"left\",\r\n        marginLeft: theme.spacing(2),\r\n        marginTop: theme.spacing(5),\r\n        marginRight: theme.spacing(1),\r\n        fontWeight: \"bold\",\r\n      },\r\n      loginBtn: {\r\n        marginLeft: theme.spacing(22),\r\n        },\r\n  })\r\n);\r\n\r\n  const SignIn = (props) => {\r\n    const [values, setValues] = useState({\r\n      email:'',\r\n      password:'',\r\n      emailError:'',\r\n      passwordError:'',\r\n      error: false\r\n    });\r\n\r\n    const handleChange = event => {\r\n      setValues({...values, [event.target.name] : event.target.value })\r\n\r\n    };\r\n\r\n    useEffect(() => {\r\n      if(values.email.length > 0){\r\n        validation('email');\r\n      }\r\n    },[values.email]\r\n    )\r\n\r\n    useEffect(() => {\r\n      if(values.password.length > 0){\r\n        validation('password');\r\n      }\r\n    },[values.password]\r\n    )\r\n\r\n    const validation = name => {\r\n      let error = false;\r\n      switch (name) {\r\n         case 'email' :\r\n          let emailMsg = \"\";\r\n\r\n          let pattern = new RegExp(/^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/);\r\n          if (!pattern.test(values.email)) {\r\n              emailMsg = 'email is invalid'\r\n              error = true;\r\n          }else{\r\n            emailMsg = ''\r\n            error = false;\r\n          }\r\n          setValues()\r\n          return error;\r\n                  \r\n            case 'password':\r\n            let passwordMsg = '';\r\n\r\n            let pattern2 = new RegExp(/^(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[a-zA-Z]).{8,}$/);\r\n            if (!pattern2.test(values.password)) {\r\n              passwordMsg = 'email is invalid'\r\n                error = true;\r\n            }else{\r\n              passwordMsg = ''\r\n              error = false;\r\n            }\r\n            return error;\r\n            \r\n            default:\r\n              return error;\r\n      }\r\n    }\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault()\r\n      console.log(this.state);   \r\n      }\r\n    \r\n    const onSubmit = values => console.log(values);\r\n    const classes = useStyles()\r\n    return (\r\n        <div>\r\n        <form onSubmit={handleSubmit}>\r\n        <div id=\"register\">\r\n            <div id=\"logo\">\r\n                <h3>Fundoo</h3>\r\n            </div>\r\n            <div id=\"logo\">\r\n                <Typography  variant=\"h6\">\r\n                    Sign in\r\n                </Typography>\r\n            </div>\r\n            <div id=\"head\">\r\n                <Typography variant=\"h7\" >\r\n                    Use Your Fundoo account\r\n                </Typography>\r\n            </div>\r\n            <div className={classes.root}>\r\n            <TextField\r\n            label=\"Username\"\r\n            id=\"outlined-basic\"\r\n            className={classes.textField}\r\n            variant=\"outlined\"\r\n            name=\"email\"\r\n            value={values.email}\r\n            onChange={handleChange('email')}\r\n            helperText={values.emailError}\r\n            \r\n            />\r\n            </div>\r\n            <div className={classes.root}>\r\n            <TextField\r\n            label=\"Password\"\r\n            id=\"outlined-basic\"\r\n            className={classes.textFieldsec}\r\n            variant=\"outlined\"\r\n            name=\"password\"\r\n            value={values.password}\r\n            onChange={handleChange}\r\n            helperText={values.passwordError}\r\n            />\r\n            </div>\r\n            <div className={classes.linkPass}>\r\n            <Link variant=\"body2\">\r\n                Forgot Password?\r\n            </Link>\r\n            </div>\r\n            <div className={classes.linkButton}>\r\n            <Link variant=\"body2\">\r\n                Create New account...\r\n            </Link>\r\n            <Button\r\n            variant=\"contained\"\r\n            size=\"medium\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            className={classes.loginBtn}\r\n            >\r\n            Login\r\n            </Button>\r\n            </div>\r\n       </div>\r\n       </form>\r\n    </div>\r\n    \r\n    );\r\n    }\r\n\r\nexport default withRouter(SignIn);\r\n","C:\\Front\\my-app\\src\\Pages\\Forget\\Forgot.jsx",["67"],"import React from \"react\";\r\nimport { Button, TextField, Grid, Paper, Typography, Link} from \"@material-ui/core\";\r\nimport './SignIn.css';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\n\r\nclass Forgot extends React.Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      email:''\r\n    }\r\n  }\r\n\r\n  changeHandlerEmail = (e) => {\r\n    this.setState({ userName: e.target.value })\r\n    this.state.email = e.target.value;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    console.log(this.state);\r\n    let userData = {\r\n      \"email\":this.state.email\r\n    }\r\n    axios.post(\"http://fundoonotes.incubation.bridgelabz.com/api/user/reset\",userData)\r\n    .then(response => {\r\n      console.log(response);\r\n      console.log(response.data);\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n    <div>\r\n  <Grid container spacing={0} justify=\"center\" direction=\"row\">      \r\n      <Grid item>\r\n        <Grid container direction=\"column\"  justify=\"center\" spacing={2} className=\"login-form\">\r\n        <Paper variant=\"elevation\" elevation={2} className=\"login-background\">\r\n        <Grid item>\r\n          <Typography component=\"h1\" variant=\"h7\" className=\"text\">\r\n            Fundoo\r\n          </Typography>\r\n        </Grid>\r\n        <Grid item>\r\n          <Typography component=\"h5\" variant=\"h6\" spacing={2}>\r\n           Account recovery\r\n          </Typography>\r\n        </Grid>\r\n    <Grid item>\r\n        <br></br>\r\n    <form onSubmit={this.handleSubmit}>\r\n    <Grid container direction=\"column\" spacing={2}>\r\n    <Grid item>\r\n    <TextField\r\n    type=\"email\"\r\n    id=\"outlined-basic\"\r\n    label=\"Username\"\r\n    variant=\"outlined\"    \r\n    required\r\n    autoFocus\r\n    name=\"userName\"      \r\n    value={this.state.userName}\r\n    onChange={this.changeHandlerEmail}\r\n    />\r\n    </Grid>\r\n    <Grid item className=\"link\">\r\n    <Link href=\"#\" variant=\"body2\">\r\n    Cancel\r\n    </Link>\r\n    </Grid>\r\n    <Grid item >\r\n    <Button\r\n    variant=\"contained\"\r\n    size=\"small\"\r\n    color=\"secondary\"\r\n    type=\"submit\"\r\n    className=\"button-block\"\r\n    >\r\n    Submit\r\n    </Button>\r\n    </Grid>\r\n    </Grid>\r\n    </form>\r\n    </Grid>\r\n    </Paper>\r\n    </Grid>\r\n    </Grid>\r\n    </Grid>\r\n  \r\n    </div>\r\n    );\r\n    }\r\n    }\r\n    export default withRouter(Forgot);","C:\\Front\\my-app\\src\\Pages\\Register\\Account.jsx",["68","69","70","71","72"],"import React, { Component } from \"react\";\r\nimport './Acc.css';\r\nimport { withRouter } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nclass Account extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      firstName:'',\r\n      lastName:'',\r\n      email:'',\r\n      password:'',\r\n      confirmPassword:''\r\n    }\r\n  }\r\n\r\n  changeHandlerUserName = (e) => {\r\n    this.setState({ \r\n        firstName: e.target.value\r\n     })\r\n    this.state.firstName = e.target.value;\r\n  };\r\n  changeHandlerLasName = (e) => {\r\n    this.setState({ \r\n        lastName: e.target.value\r\n     })\r\n    this.state.lastName = e.target.value;\r\n  };\r\n  changeHandlerEmail = (e) => {\r\n    this.setState({ \r\n        email: e.target.value\r\n     })\r\n    this.state.email = e.target.value;\r\n  };\r\n  changeHandlerPassword = (e) => {\r\n    this.setState({ \r\n        password: e.target.value\r\n     })\r\n    this.state.password = e.target.value;\r\n  };\r\n  changeHandlerConfirmPassword = (e) => {\r\n    this.setState({ \r\n        confirmPassword: e.target.value\r\n     })\r\n    this.state.confirmPassword = e.target.value;\r\n  };\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    console.log(this.state);\r\n    let userData = {\r\n      \"cartId\":'',\r\n      \"firstName\": this.state.firstName,\r\n      \"lastName\": this.state.lastName,\r\n      \"email\": this.state.email,\r\n      \"password\": this.state.password,\r\n      \"confirmPassword\": this.state.confirmPassword,\r\n      \"service\":\"advance\"\r\n    }\r\n    axios.post(\"http://fundoonotes.incubation.bridgelabz.com/api/user/adminSignUp\",userData)\r\n    .then(response => {\r\n      console.log(response);\r\n      console.log(response.data);\r\n    })\r\n  }\r\n\r\n    render() {    \r\n        return (\r\n          <div className=\"wrapper\">\r\n            <div className=\"form-wrapper\">\r\n             <h2>Fundoo</h2>\r\n              <h3>Create your Fundoo Account</h3>\r\n              <form onSubmit={this.handleSubmit}>\r\n                <div className=\"firstName\">\r\n                  <label htmlFor=\"firstName\">First Name</label>\r\n                  <input\r\n                    placeholder=\"First Name\"\r\n                    type=\"text\"\r\n                    name=\"firstName\"\r\n                    noValidate\r\n                    onChange={this.changeHandlerUserName}\r\n                  />\r\n                </div>\r\n                <div className=\"lastName\">\r\n                  <label htmlFor=\"lastName\">Last Name</label>\r\n                  <input\r\n                    placeholder=\"Last Name\"\r\n                    type=\"text\"\r\n                    name=\"lastName\"\r\n                    noValidate\r\n                    onChange={this.changeHandlerLasName}\r\n                  />\r\n                </div>\r\n                <div className=\"email\">\r\n                  <label htmlFor=\"email\">Email</label>\r\n                  <input\r\n                    placeholder=\"Email\"\r\n                    type=\"email\"\r\n                    name=\"email\"\r\n                    noValidate\r\n                    onChange={this.changeHandlerEmail}\r\n                  />\r\n                </div>\r\n                <div className=\"password\">\r\n                  <label htmlFor=\"password\">Password</label>\r\n                  <input\r\n                    placeholder=\"Password\"\r\n                    type=\"password\"\r\n                    name=\"password\"\r\n                    noValidate\r\n                    onChange={this.changeHandlerPassword}\r\n                  />\r\n                </div>\r\n                <div className=\"password\">\r\n                  <label htmlFor=\"password\">Confirm Password</label>\r\n                  <input\r\n                    placeholder=\"Password\"\r\n                    type=\"password\"\r\n                    noValidate\r\n                    onChange={this.changeHandlerConfirmPassword}\r\n                  />\r\n                </div>\r\n                <div className=\"createAccount\">\r\n                  <small>SignIn</small>\r\n                  <button type=\"submit\">Create Account</button>\r\n                </div>\r\n              </form>\r\n            </div>\r\n          </div>\r\n        );\r\n      }\r\n    }    \r\n    export default withRouter(Account);\r\n","C:\\Front\\my-app\\src\\Components\\DrawerFiles\\SimpleDrawer.jsx",[],"C:\\Front\\my-app\\src\\Components\\Home\\Dashboard.jsx",[],"C:\\Front\\my-app\\src\\Components\\NoteFiles\\Note.jsx",[],"C:\\Front\\my-app\\src\\Components\\NoteFiles\\CreateNote.jsx",[],"C:\\Front\\my-app\\src\\Pages\\Login\\Login.jsx",[],"C:\\Front\\my-app\\src\\Pages\\Register\\Reg.jsx",["73"],"import React from \"react\";\r\nimport { Typography, Link, Button } from \"@material-ui/core\";\r\nimport { withStyles } from \"@material-ui/core/styles\";\r\nimport TextField from '@material-ui/core/TextField';\r\nimport './Register.css';\r\nimport { withRouter } from 'react-router-dom';\r\nimport Logo from '../../Accets/funlogo.png';\r\n\r\n\r\n    const styles = theme => ({  \r\n    root: {\r\n      display: 'flex',\r\n      flexWrap: 'wrap',\r\n    },\r\n    \r\n    textField: {\r\n        marginTop: theme.spacing(6),\r\n      marginLeft: theme.spacing(1),\r\n      marginRight: theme.spacing(1),\r\n      width: '30ch',\r\n      marginTop: theme.spacing(2),\r\n      height: '5ch'\r\n    },\r\n    textFieldsec: {\r\n        marginLeft: theme.spacing(2),\r\n        marginRight: theme.spacing(1),\r\n        width: '62ch',\r\n        height:'5ch',\r\n        \r\n      },\r\n      linkPass: {\r\n          textAlign: \"left\",\r\n          marginLeft: theme.spacing(2),\r\n          fontWeight: \"bold\",\r\n      },\r\n      linkButton: {\r\n        textAlign: \"left\",\r\n        marginLeft: theme.spacing(2),\r\n        marginTop: theme.spacing(5),\r\n        marginRight: theme.spacing(1),\r\n        fontWeight: \"bold\",\r\n        width: '30ch',\r\n        height: '5ch'\r\n      },\r\n      loginBtn: {\r\n       marginLeft: theme.spacing(20),\r\n        },\r\n  });\r\n\r\n  class Reg extends React.Component {\r\n\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n\r\n            fields: {},\r\n            errors: {email:'' ,password:''}\r\n        }\r\n      this.handleChange = this.handleChange.bind(this);\r\n      this.submitLoginForm = this.submitLoginForm.bind(this);\r\n  \r\n    };\r\n\r\n    handleChange(e){\r\n        let fields = this.state.fields;\r\n        fields[e.target.name] = e.target.value;\r\n        this.setState({\r\n            fields\r\n        });\r\n    }\r\n\r\n\r\n    validationForm = () => {\r\n        let fields = this.state.fields;\r\n        let errors = {};\r\n        let formIsValid = true;\r\n\r\n        if (!fields[\"email\"]) {\r\n            formIsValid = false;\r\n            errors[\"email\"] = \"*Please enter your email-ID.\";\r\n        }\r\n        \r\n        if (typeof fields[\"email\"] !== \"undefined\") {\r\n            var pattern = new RegExp(/^((\"[\\w-\\s]+\")|([\\w-]+(?:\\.[\\w-]+)*)|(\"[\\w-\\s]+\")([\\w-]+(?:\\.[\\w-]+)*))(@((?:[\\w-]+\\.)*\\w[\\w-]{0,66})\\.([a-z]{2,6}(?:\\.[a-z]{2})?)$)|(@\\[?((25[0-5]\\.|2[0-4][0-9]\\.|1[0-9]{2}\\.|[0-9]{1,2}\\.))((25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\.){2}(25[0-5]|2[0-4][0-9]|1[0-9]{2}|[0-9]{1,2})\\]?$)/i);\r\n            if (!pattern.test(fields[\"email\"])) {\r\n              formIsValid = false;\r\n              errors[\"email\"] = \"*Please enter valid email-ID.\";\r\n            }\r\n          }\r\n\r\n        if (!fields[\"password\"]){\r\n            formIsValid = false;\r\n            errors[\"password\"] = \"*Please enter your password.\";\r\n        }\r\n\r\n        if (typeof fields[\"password\"] !== \"undefined\"){\r\n            if(!fields[\"password\"].match(/^.*(?=.{8,})(?=.*\\d)(?=.*[a-z])(?=.*[A-Z])(?=.*[@#$%&]).*$/)){\r\n                formIsValid = false;\r\n                errors[\"password\"] = \"* Please enter secure password.\"\r\n            }\r\n        }\r\n\r\n        this.setState({\r\n            errors: errors\r\n        });\r\n        return formIsValid;\r\n    }\r\n\r\n    submitLoginForm = (e) => {\r\n        e.preventDefault();\r\n        if (this.validationForm()) {\r\n            let fields = {};\r\n            fields[\"email\"] = \"\";\r\n            fields[\"password\"] = \"\";\r\n            this.setState({fields:fields});\r\n            alert(\"Form submitted\");\r\n        }\r\n  \r\n    }\r\n\r\n    render() {\r\n    const { classes } = this.props;\r\n    return (\r\n        <div >\r\n        <form onSubmit={this.submitLoginForm} >\r\n        <div className=\"register-form\">\r\n            <div className=\"logo\">\r\n                <img src={Logo} alt=\"boohoo\" className=\"img-responsive\"/>\r\n            </div>\r\n            <div className=\"trypto\">\r\n                <Typography variant=\"h7\">\r\n                    Create your Fundoo Account\r\n                </Typography>\r\n            </div>\r\n            <div className=\"text\">\r\n            <TextField\r\n            label=\"Firstname\"\r\n            id=\"outlined-size-small\"\r\n            variant=\"outlined\"\r\n            name=\"firstName\"\r\n            size=\"small\"\r\n            value={this.state.fields.firstName}\r\n            onChange={this.handleChange}\r\n            className={classes.textField}\r\n            />\r\n    \r\n            <TextField\r\n            label=\"Lastname\"\r\n            id=\"outlined-size-small\"\r\n            variant=\"outlined\"\r\n            name=\"lastName\"\r\n            size=\"small\"\r\n            value={this.state.fields.lastName}\r\n            onChange={this.handleChange}\r\n            className={classes.textField}\r\n            />\r\n            </div>\r\n            <div className=\"text-field\">\r\n            <TextField\r\n            type=\"username\"\r\n            label=\"Username\"\r\n            id=\"outlined-size-small\"\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            name=\"email\"\r\n            value={this.state.fields.email}\r\n            onChange={this.handleChange}\r\n            className={classes.textFieldsec}\r\n            />\r\n            </div>\r\n            <div className=\"text\">\r\n            <TextField\r\n            type=\"password\"\r\n            label=\"Password\"\r\n            id=\"outlined-size-small\"\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            name=\"password\"\r\n            value={this.state.fields.password}\r\n            onChange={this.handleChange}\r\n            className={classes.textField}\r\n            />\r\n            <TextField\r\n            type=\"password\"\r\n            label=\"Confirm\"\r\n            id=\"outlined-size-small\"\r\n            variant=\"outlined\"\r\n            size=\"small\"\r\n            name=\"confirmPassword\"\r\n            value={this.state.fields.confirmPassword}\r\n            onChange={this.handleChange}\r\n            className={classes.textField}\r\n            />\r\n            </div> \r\n            <div className=\"link-button\">\r\n            <Link variant=\"body2\" className={classes.linkButton}>\r\n                Sign in instead..\r\n            </Link>\r\n            \r\n            <Button\r\n            variant=\"contained\"\r\n            size=\"medium\"\r\n            color=\"primary\"\r\n            type=\"submit\"\r\n            className={classes.loginBtn}\r\n            >\r\n            Next\r\n            </Button>\r\n            </div>\r\n            \r\n        </div>    \r\n     </form>\r\n     </div>\r\n    );\r\n    }\r\n}\r\nexport default withRouter(withStyles(styles)(Reg));\r\n//this export connects the component to the reduxStore as well as allowing us to use the history props\r\n",{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","replacedBy":"77"},{"ruleId":"78","severity":1,"message":"79","line":66,"column":7,"nodeType":"80","endLine":66,"endColumn":21,"suggestions":"81"},{"ruleId":"78","severity":1,"message":"79","line":73,"column":7,"nodeType":"80","endLine":73,"endColumn":24,"suggestions":"82"},{"ruleId":"83","severity":1,"message":"84","line":82,"column":42,"nodeType":"85","messageId":"86","endLine":82,"endColumn":43,"suggestions":"87"},{"ruleId":"88","severity":1,"message":"89","line":87,"column":13,"nodeType":"90","messageId":"91","endLine":87,"endColumn":21},{"ruleId":"88","severity":1,"message":"92","line":101,"column":15,"nodeType":"90","messageId":"91","endLine":101,"endColumn":26},{"ruleId":"88","severity":1,"message":"93","line":115,"column":11,"nodeType":"90","messageId":"91","endLine":115,"endColumn":19},{"ruleId":"94","severity":1,"message":"95","line":18,"column":5,"nodeType":"96","endLine":18,"endColumn":15},{"ruleId":"94","severity":1,"message":"95","line":22,"column":5,"nodeType":"96","endLine":22,"endColumn":15},{"ruleId":"94","severity":1,"message":"95","line":28,"column":5,"nodeType":"96","endLine":28,"endColumn":15},{"ruleId":"94","severity":1,"message":"95","line":34,"column":5,"nodeType":"96","endLine":34,"endColumn":15},{"ruleId":"94","severity":1,"message":"95","line":40,"column":5,"nodeType":"96","endLine":40,"endColumn":15},{"ruleId":"94","severity":1,"message":"95","line":46,"column":5,"nodeType":"96","endLine":46,"endColumn":15},{"ruleId":"97","severity":1,"message":"98","line":21,"column":7,"nodeType":"99","messageId":"100","endLine":21,"endColumn":16},"no-native-reassign",["101"],"no-negated-in-lhs",["102"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'validation'. Either include it or remove the dependency array.","ArrayExpression",["103"],["104"],"no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["105","106"],"no-unused-vars","'emailMsg' is assigned a value but never used.","Identifier","unusedVar","'passwordMsg' is assigned a value but never used.","'onSubmit' is assigned a value but never used.","react/no-direct-mutation-state","Do not mutate state directly. Use setState().","MemberExpression","no-dupe-keys","Duplicate key 'marginTop'.","ObjectExpression","unexpected","no-global-assign","no-unsafe-negation",{"desc":"107","fix":"108"},{"desc":"109","fix":"110"},{"messageId":"111","fix":"112","desc":"113"},{"messageId":"114","fix":"115","desc":"116"},"Update the dependencies array to be: [validation, values.email]",{"range":"117","text":"118"},"Update the dependencies array to be: [validation, values.password]",{"range":"119","text":"120"},"removeEscape",{"range":"121","text":"122"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"123","text":"124"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[1753,1767],"[validation, values.email]",[1888,1905],"[validation, values.password]",[2097,2098],"",[2097,2097],"\\"]